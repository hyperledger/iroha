name: publish/what 2?

on:
  push:
    tags:
      - 'v2*'
  workflow_dispatch:
    inputs:
      BUILD_GLIBC_IMAGE:
        description: "Select \"true\" to build and push the standard \"glibc\" image"
        type: choice
        required: true
        default: 'false'
        options:
          - true
          - false
      BUILD_ALPINE_IMAGE:
        description: "Select \"true\" to build and push the alpine image from specific commit SHA"
        type: choice
        required: true
        default: 'false'
        options:
          - true
          - false
      CHECKOUT_REF:
        description: "The branch, tag or SHA to checkout"
        required: true
        default: main
      PROFILER_NAME:
        description: "Profiler value as the image tag part"
        required: true
        default: glibc

env:
  IROHA2_DOCKERFILE: Dockerfile.glibc
  IROHA2_PROFILE: profiling
  IROHA2_RUSTFLAGS: -C force-frame-pointers=on
  IROHA2_FEATURES: profiling
  IROHA2_CARGOFLAGS: -Z build-std
  DOCKER_COMPOSE_PATH: defaults

jobs:
  build_executor:
    runs-on: ubuntu-latest
    container:
      image: hyperledger/iroha2-ci:nightly-2024-09-09
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.CHECKOUT_REF }}
      - name: Build iroha executor
        run: mold --run cargo run --bin iroha_wasm_builder -- build ./wasm_samples/default_executor --optimize --out-file ${{ env.DOCKER_COMPOSE_PATH }}/executor.wasm
      - name: Upload executor to reuse in other jobs
        uses: actions/upload-artifact@v4
        with:
          name: executor.wasm
          path: ${{ env.DOCKER_COMPOSE_PATH }}/executor.wasm
          retention-days: 1

  registry-profiling-image:
    if: ${{ inputs.BUILD_GLIBC_IMAGE == 'false' }} and ${{ inputs.BUILD_ALPINE_IMAGE == 'false' }}
    runs-on: [self-hosted, Linux, iroha2]
    needs: build_executor
    container:
      image: hyperledger/iroha2-ci:nightly-2024-09-09
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.CHECKOUT_REF }}
      - name: Download executor.wasm file
        uses: actions/download-artifact@v4
        with:
          name: executor.wasm
          path: ${{ env.DOCKER_COMPOSE_PATH }}
      - name: Get the release tag
        run: |
          RELEASE_VERSION=${{ github.ref_name }}
          PREFIX='v'
          TAG=${RELEASE_VERSION#$PREFIX}
          echo "TAG=$TAG" >>$GITHUB_ENV
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to Soramitsu Harbor
        uses: docker/login-action@v3
        with:
          registry: docker.soramitsu.co.jp
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        if: always()
        uses: docker/setup-buildx-action@v3
        with:
          install: true
      - name: Build and push iroha2-profiling image
        uses: docker/build-push-action@v6
        if: always()
        with:
          push: true
          tags: |
            hyperledger/iroha:${{ env.TAG }}-${{ env.IROHA2_PROFILE }}
            docker.soramitsu.co.jp/iroha2/iroha:${{ env.TAG }}-${{ env.IROHA2_PROFILE }}
          labels: commit=${{ github.sha }}
          build-args: |
            "PROFILE=${{ env.IROHA2_PROFILE }}"
            "RUSTFLAGS=${{ env.IROHA2_RUSTFLAGS }}"
            "FEATURES=${{ env.IROHA2_FEATURES }}"
            "CARGOFLAGS=${{ env.IROHA2_CARGOFLAGS }}"
          file: ${{env.IROHA2_DOCKERFILE }}
          context: .

  registry-glibc-image:
    if: ${{ inputs.BUILD_GLIBC_IMAGE == 'true' }} and ${{ inputs.BUILD_ALPINE_IMAGE == 'false' }}
    runs-on: [self-hosted, Linux, iroha2]
    needs: build_executor
    container:
      image: hyperledger/iroha2-ci:nightly-2024-09-09
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.CHECKOUT_REF }}
      - name: Download executor.wasm file
        uses: actions/download-artifact@v4
        with:
          name: executor.wasm
          path: ${{ env.DOCKER_COMPOSE_PATH }}
      - name: Login to Soramitsu Harbor
        uses: docker/login-action@v3
        with:
          registry: docker.soramitsu.co.jp
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        if: always()
        uses: docker/setup-buildx-action@v3
        with:
          install: true
      - name: Build and push iroha2-glibc image
        uses: docker/build-push-action@v6
        if: always()
        with:
          push: true
          tags: docker.soramitsu.co.jp/iroha2/iroha:${{ inputs.PROFILER_NAME }}-${{ github.sha }}
          labels: commit=${{ github.sha }}
          file: ${{env.IROHA2_DOCKERFILE }}
          context: .

  registry-alpine-image:
    if: ${{ inputs.BUILD_GLIBC_IMAGE == 'false' }} and ${{ inputs.BUILD_ALPINE_IMAGE == 'true' }}
    runs-on: [self-hosted, Linux, iroha2]
    needs: build_executor
    container:
      image: hyperledger/iroha2-ci:nightly-2024-09-09
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.CHECKOUT_REF }}
      - name: Download executor.wasm file
        uses: actions/download-artifact@v4
        with:
          name: executor.wasm
          path: ${{ env.DOCKER_COMPOSE_PATH }}
      - name: Login to Soramitsu Harbor
        uses: docker/login-action@v3
        with:
          registry: docker.soramitsu.co.jp
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        if: always()
        uses: docker/setup-buildx-action@v3
        with:
          install: true
      - name: Build and push iroha2-alpine-sha image
        uses: docker/build-push-action@v6
        if: always()
        with:
          push: true
          tags: docker.soramitsu.co.jp/iroha2/iroha:${{ github.sha }}
          labels: commit=${{ github.sha }}
          file: Dockerfile
          context: .
